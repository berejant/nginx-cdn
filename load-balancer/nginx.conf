user  nginx;
worker_processes  auto;

events {
    worker_connections  1024;
}

http {
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    keepalive_timeout 65;
    resolver 8.8.8.8;

    # Fewest hops
    upstream cdn_fewest_hops {
        # how to implement it in nginx and Docker??
        server node1:80;
        server node2:80;
        server node3:80;
    }

    server {
        listen 8001;
        location / {
            proxy_set_header Host hotline.ua;
            proxy_connect_timeout 3s;
            proxy_pass http://cdn_fewest_hops;
        }
    }

    # Shortest Time
    upstream cdn_least_time {
        least_time header;

        server node1:80;
        server node2:80;
        server node3:80;
    }

    server {
        listen 8002;
        location / {
            proxy_set_header Host hotline.ua;
            proxy_connect_timeout 3s;
            proxy_pass http://cdn_least_time;
        }
    }

    #Highest availability
    upstream cdn_least_conn {
        least_conn;

        server node1:80;
        server node2:80;
        server node3:80;
    }

    server {
        listen 8003;
        location / {
            proxy_set_header Host hotline.ua;
            proxy_connect_timeout 3s;
            proxy_pass http://cdn_least_conn;
        }
    }
}
